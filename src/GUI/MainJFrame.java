/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import autonet.Car;
import autonet.CrawlerListener;
import autonet.MailClient;
import autonet.RunnableCrawlerControl;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jur_1
 */
public class MainJFrame extends javax.swing.JFrame  implements CrawlerListener
{
    boolean runCrawler = false;
    private ScheduledExecutorService scheduler;
    Car[][] cars = null;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonStartEnd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextMail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextMailPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonStartEnd.setText("Start");
        jButtonStartEnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonStartEndMouseReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Link"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setText("mail:");

        jTextMail.setText("example@gmail.com");

        jLabel2.setText("geslo:");

        jTextMailPassword.setText("...");
        jTextMailPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMailPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonStartEnd)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextMailPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStartEnd)
                    .addComponent(jLabel1)
                    .addComponent(jTextMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextMailPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartEndMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStartEndMouseReleased

        runCrawler = !runCrawler;
        System.out.println("runCrawler: " + runCrawler);
        if(runCrawler)
        {
            URL links[] = getURLs();
            startCrawler(links);
        }
        else stopCrawler();
        
    }//GEN-LAST:event_jButtonStartEndMouseReleased

    private void jTextMailPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMailPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMailPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStartEnd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextMail;
    private javax.swing.JTextField jTextMailPassword;
    // End of variables declaration//GEN-END:variables

    private void startCrawler(URL links[]) 
    {
        scheduler =  Executors.newScheduledThreadPool(1);
        scheduler.scheduleAtFixedRate(new RunnableCrawlerControl(this, links), 0, 1, TimeUnit.MINUTES);
        jButtonStartEnd.setText("Stop");
    }

    public void stopCrawler() 
    {
        scheduler.shutdownNow();
        jButtonStartEnd.setText("Start");
    }

    @Override
    public void onError() {
        
        stopCrawler();
    }

    private URL[] getURLs() 
    {
        int rowCount = jTable1.getRowCount();
        URL urls[] = new URL[rowCount];
        for(int i = 0; i < rowCount; i++)
        {
            try 
            {   
                if(jTable1.getValueAt(i, 0) != null)
                {
                    urls[i] = new URL(jTable1.getValueAt(i, 0).toString());
                }
                else
                {
                    urls[i] = null;
                }
            } 
            catch (Exception ex) 
            {
                System.out.println("Exception on getURLs: " + ex.toString());
                ex.printStackTrace();
                try {
                    urls[i] = new URL(" ");
                } catch (MalformedURLException ex1) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        }
        return urls;
    }

    @Override
    public void newCars(Car[][] newCars) 
    {
        if(cars != null)
        {
            System.out.println("find new cars...");
            findNewCars(newCars);
        }
        cars = newCars;
    }

    private void findNewCars(Car[][] newCars) 
    {
        try
        {
            boolean newCarFound = false;
            
            System.out.println("new cars: ");
            outputCars(newCars[0]);
            System.out.println("old casrs: ");
            outputCars(cars[0]);
            System.out.println("comparing cars...");
            
            Car newCar;
            Car oldCar;
            for(int i = 0; i < newCars.length; i++)
            {
                for(int a = 0; a < newCars[i].length; a++)
                {
                    newCar = newCars[i][a];
                    for(int u = 0; u < cars[i].length; u++)
                    {
                        oldCar = cars[i][u];
                        if(newCars[i][a]  != null)
                        {
                            if(cars[i][u] != null)
                            {
                                System.out.println("new car link: " + newCar.link + ", oldCars link: " + oldCar.link);
                                if(newCar.link.equals(oldCar.link)) break;
                                if(u == cars[i].length - 1)
                                {
                                    System.out.println("new car: " + newCar.link);
                                    newCarFound = true;
                                    MailClient mailClient = new MailClient(jTextMail.getText(),jTextMail.getText(), jTextMailPassword.getText(), newCar.text, newCar.link);
                                    Thread mailThread = new Thread(mailClient);
                                    mailThread.start();
                                } 

                            }
    //                        else
    //                        {
    //                            System.out.println("new car: " + newCars[i][a].link);
    //                            newCarFound = true;
    //                            break;
    //                        }
                        }     
                    }
                }
            }
            System.out.println("enf od find new cars");
            if(newCarFound) System.out.println("new car found");
        }
        catch(Exception ex)
        {
            System.out.println("Exception: " + ex.toString());
            ex.printStackTrace();
        }
    }

   private void outputCars(Car[] cars) 
    {
        if(cars != null)
        {
            for(Car car : cars)
            {
                if(car != null) System.out.println("Car: " + car.toString() + "\n");
            }
        }
    }    
}
